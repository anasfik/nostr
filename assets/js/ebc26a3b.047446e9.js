"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[518],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>y});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function s(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?s(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},s=Object.keys(e);for(r=0;r<s.length;r++)n=s[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(r=0;r<s.length;r++)n=s[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var c=r.createContext({}),l=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},u=function(e){var t=l(e.components);return r.createElement(c.Provider,{value:t},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},h=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,s=e.originalType,c=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),p=l(n),h=o,y=p["".concat(c,".").concat(h)]||p[h]||d[h]||s;return n?r.createElement(y,a(a({ref:t},u),{},{components:n})):r.createElement(y,a({ref:t},u))}));function y(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var s=n.length,a=new Array(s);a[0]=h;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i[p]="string"==typeof e?e:o,a[1]=i;for(var l=2;l<s;l++)a[l]=n[l];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}h.displayName="MDXCreateElement"},4406:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>a,default:()=>d,frontMatter:()=>s,metadata:()=>i,toc:()=>l});var r=n(7462),o=(n(7294),n(3905));const s={sidebar_position:3},a="Must Know?",i={unversionedId:"must-know",id:"must-know",title:"Must Know?",description:"With dart_nostr, you can achieve almost anything that relate to the Nostr protocol, there is some exception that are out of my hand currently such as adapting web-based Chrome extensions to work with Flutter, but I am working on it.but all the operations of sending events & listening to them.. will be so easy for easy.",source:"@site/docs/must-know.md",sourceDirName:".",slug:"/must-know",permalink:"/dart-nostr-docs/must-know",draft:!1,editUrl:"https://github.com/anasfik/nostr/tree/main/docs/docs/must-know.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"Installation",permalink:"/dart-nostr-docs/installation"},next:{title:"Usage",permalink:"/dart-nostr-docs/category/usage"}},c={},l=[{value:"Code structure",id:"code-structure",level:2}],u={toc:l},p="wrapper";function d(e){let{components:t,...n}=e;return(0,o.kt)(p,(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"must-know"},"Must Know?"),(0,o.kt)("p",null,"With ",(0,o.kt)("inlineCode",{parentName:"p"},"dart_nostr"),", you can achieve almost anything that relate to the Nostr protocol, there is some exception that are out of my hand currently such as adapting web-based Chrome extensions to work with Flutter, but I am working on it.but all the operations of sending events & listening to them.. will be so easy for easy."),(0,o.kt)("h2",{id:"code-structure"},"Code structure"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"dart_nostr")," exposes all it's functionality via its main and only singleton instance that you need to use to access all other services of this package:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-dart"},"Nostr singleton = Nostr.instance;\n")),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"Nostr.instance")," offers access to all other internal services & modules of this package which they-self offer deeper functionality to get things done:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-dart"},"final keysService = Nostr.instance.keysService; // access to the keys service, which will provide methods to handle user key pairs, private keys, public keys, etc.\n\nfinal relaysService = Nostr.instance.relaysService; // access to the relays service, which will provide methods to interact with your own relays such as sending events, listening to events, etc.\n\nfinal utilsService = Nostr.instance.utilsService; // access the utils service, which provides many handy utils that you will need to use in your app, such as encoding, getting random hex strings to use with requests, etc.\n")),(0,o.kt)("p",null,"And so on, in the usage section, you will get to learn every single one and it's functionality & utils."))}d.isMDXComponent=!0}}]);