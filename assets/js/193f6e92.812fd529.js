"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[554],{3905:(e,t,n)=>{n.d(t,{Zo:()=>l,kt:()=>v});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var c=r.createContext({}),u=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},l=function(e){var t=u(e.components);return r.createElement(c.Provider,{value:t},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},f=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,c=e.parentName,l=i(e,["components","mdxType","originalType","parentName"]),p=u(n),f=o,v=p["".concat(c,".").concat(f)]||p[f]||d[f]||a;return n?r.createElement(v,s(s({ref:t},l),{},{components:n})):r.createElement(v,s({ref:t},l))}));function v(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,s=new Array(a);s[0]=f;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i[p]="string"==typeof e?e:o,s[1]=i;for(var u=2;u<a;u++)s[u]=n[u];return r.createElement.apply(null,s)}return r.createElement.apply(null,n)}f.displayName="MDXCreateElement"},6541:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>s,default:()=>d,frontMatter:()=>a,metadata:()=>i,toc:()=>u});var r=n(7462),o=(n(7294),n(3905));const a={sidebar_position:5},s="Count Event",i={unversionedId:"usage/relays-and-events/count_event",id:"usage/relays-and-events/count_event",title:"Count Event",description:"You can get the events count for a specific query (filters) which mentioned in nip45 instead of retrieving all their data, this is handy when you want to show numerical count to the user such as follwers, a feed notes number...",source:"@site/docs/usage/relays-and-events/count_event.md",sourceDirName:"usage/relays-and-events",slug:"/usage/relays-and-events/count_event",permalink:"/nostr/usage/relays-and-events/count_event",draft:!1,editUrl:"https://github.com/anasfik/nostr/tree/main/docs/docs/usage/relays-and-events/count_event.md",tags:[],version:"current",sidebarPosition:5,frontMatter:{sidebar_position:5},sidebar:"tutorialSidebar",previous:{title:"Sending Events",permalink:"/nostr/usage/relays-and-events/sending-events"},next:{title:"Contributing",permalink:"/nostr/contributing"}},c={},u=[],l={toc:u},p="wrapper";function d(e){let{components:t,...n}=e;return(0,o.kt)(p,(0,r.Z)({},l,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"count-event"},"Count Event"),(0,o.kt)("p",null,"You can get the events count for a specific query (filters) which mentioned in ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/nostr-protocol/nips/blob/master/45.md"},"nip45")," instead of retrieving all their data, this is handy when you want to show numerical count to the user such as follwers, a feed notes number..."),(0,o.kt)("p",null,"For this, you can use the ",(0,o.kt)("inlineCode",{parentName:"p"},"sendCountEventToRelays")," method, passing a ",(0,o.kt)("inlineCode",{parentName:"p"},"NostrCountEvent")," that represents the count query:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-dart"},'\n// Filter to target all notes (kind 1)  events with the "nostr" tag.\n  NostrFilter filter = NostrFilter(\n    kinds: [1],\n    t: ["nostr"],\n  );\n\n// create the count event.\nfinal countEvent = NostrCountEvent.fromPartialData(\n  eventsFilter: filter,\n);\n\nNostr.instance.relaysService.sendCountEventToRelays(\n  countEvent,\n  onCountResponse: (countRes) {\n    print("your filter matches ${countRes.count} events");\n  },\n);\n')),(0,o.kt)("p",null,"when the response is got by the relays, the ",(0,o.kt)("inlineCode",{parentName:"p"},"onCountResponse")," callback will be called, you can use it."))}d.isMDXComponent=!0}}]);