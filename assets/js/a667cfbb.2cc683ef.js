"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[720],{3905:(e,t,n)=>{n.d(t,{Zo:()=>l,kt:()=>k});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var c=a.createContext({}),p=function(e){var t=a.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},l=function(e){var t=p(e.components);return a.createElement(c.Provider,{value:t},e.children)},u="mdxType",y={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,c=e.parentName,l=i(e,["components","mdxType","originalType","parentName"]),u=p(n),d=r,k=u["".concat(c,".").concat(d)]||u[d]||y[d]||o;return n?a.createElement(k,s(s({ref:t},l),{},{components:n})):a.createElement(k,s({ref:t},l))}));function k(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,s=new Array(o);s[0]=d;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i[u]="string"==typeof e?e:r,s[1]=i;for(var p=2;p<o;p++)s[p]=n[p];return a.createElement.apply(null,s)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},7388:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>s,default:()=>y,frontMatter:()=>o,metadata:()=>i,toc:()=>p});var a=n(7462),r=(n(7294),n(3905));const o={sidebar_position:5,description:"Learn how to encode & decode a key pair keys to the npub & nsec formats."},s="Create npub & nsec keys",i={unversionedId:"usage/keys-management/encode-decode-key-pair-keys-to-npub-nsec-formats",id:"usage/keys-management/encode-decode-key-pair-keys-to-npub-nsec-formats",title:"Create npub & nsec keys",description:"Learn how to encode & decode a key pair keys to the npub & nsec formats.",source:"@site/docs/usage/keys-management/encode-decode-key-pair-keys-to-npub-nsec-formats.md",sourceDirName:"usage/keys-management",slug:"/usage/keys-management/encode-decode-key-pair-keys-to-npub-nsec-formats",permalink:"/nostr/usage/keys-management/encode-decode-key-pair-keys-to-npub-nsec-formats",draft:!1,editUrl:"https://github.com/anasfik/nostr/tree/main/docs/docs/usage/keys-management/encode-decode-key-pair-keys-to-npub-nsec-formats.md",tags:[],version:"current",sidebarPosition:5,frontMatter:{sidebar_position:5,description:"Learn how to encode & decode a key pair keys to the npub & nsec formats."},sidebar:"tutorialSidebar",previous:{title:"Sign and verify a pice of data",permalink:"/nostr/usage/keys-management/signing-and-verifying-data"},next:{title:"Creating Events",permalink:"/nostr/usage/relays-and-events/creating-events"}},c={},p=[{value:"Npub keys (public keys)",id:"npub-keys-public-keys",level:2},{value:"Encode a public key to npub format",id:"encode-a-public-key-to-npub-format",level:3},{value:"Decodes a npub key to a public key",id:"decodes-a-npub-key-to-a-public-key",level:3},{value:"Nsec keys (private keys)",id:"nsec-keys-private-keys",level:2},{value:"Encode a private key to nsec format",id:"encode-a-private-key-to-nsec-format",level:3},{value:"Decodes a nsec key to a private key",id:"decodes-a-nsec-key-to-a-private-key",level:3},{value:"What&#39;s next ?",id:"whats-next-",level:2}],l={toc:p},u="wrapper";function y(e){let{components:t,...n}=e;return(0,r.kt)(u,(0,a.Z)({},l,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"create-npub--nsec-keys"},"Create npub & nsec keys"),(0,r.kt)("p",null,"Nostr is about hex keys, these are what you will use to sign & verify data, or in other, you will create direct events with them. However, Nostr ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/nostr-protocol/nips/blob/master/19.md"},"NIP 19")," exposes bech32-encoded entities, Please check it first to understand what is npub & nsec keys."),(0,r.kt)("p",null,"Let's say we have this key pair:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-dart"},"final keyPair = Nostr.instance.keysService.generateKeyPair();\n\nprint(keyPair.public); // ...\nprint(keyPair.private); // ...\n")),(0,r.kt)("h2",{id:"npub-keys-public-keys"},"Npub keys (public keys)"),(0,r.kt)("p",null,"Let's learn how to encode & decode npub keys, in the following sections."),(0,r.kt)("h3",{id:"encode-a-public-key-to-npub-format"},"Encode a public key to npub format"),(0,r.kt)("p",null,"Let's say we want to create the convenable npub key for the public key above, we can use the ",(0,r.kt)("inlineCode",{parentName:"p"},"encodePublicKeyToNpub()")," method of the ",(0,r.kt)("inlineCode",{parentName:"p"},"Nostr.instance.keysService"),", Example:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-dart"},"final npubKey = Nostr.instance.keysService.encodePublicKeyToNpub(keyPair.public);\n\nprint(npubKey); // npub...\n")),(0,r.kt)("p",null,"we can now use it, maybe show it to users..."),(0,r.kt)("h3",{id:"decodes-a-npub-key-to-a-public-key"},"Decodes a npub key to a public key"),(0,r.kt)("p",null,"Now let's say we want to turn back our npub to our public key, we can use the ",(0,r.kt)("inlineCode",{parentName:"p"},"decodeNpubKeyToPublicKey()")," method of the ",(0,r.kt)("inlineCode",{parentName:"p"},"Nostr.instance.keysService"),", Example:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-dart"},"final decodedPublicKey = Nostr.instance.keysService.decodeNpubKeyToPublicKey(npubKey);\n\nprint(decodedPublicKey); // ...\n\nprint(decodedPublicKey == keyPair.public); // true\n")),(0,r.kt)("p",null,"See, we got our public key back."),(0,r.kt)("h2",{id:"nsec-keys-private-keys"},"Nsec keys (private keys)"),(0,r.kt)("p",null,"Let's learn how to encode & decode nsec keys, in the following sections."),(0,r.kt)("h3",{id:"encode-a-private-key-to-nsec-format"},"Encode a private key to nsec format"),(0,r.kt)("p",null,"Let's say we want to create the convenable nsec key for the private key above, we can use the ",(0,r.kt)("inlineCode",{parentName:"p"},"encodePrivateKeyToNsec()")," method of the ",(0,r.kt)("inlineCode",{parentName:"p"},"Nostr.instance.keysService"),", Example:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-dart"},"\nfinal nsecKey = Nostr.instance.keysService.encodePrivateKeyToNsec(keyPair.private);\n\nprint(nsecKey); // nsec...\n")),(0,r.kt)("p",null,"We can now use it, maybe show it in the key's owner profile..."),(0,r.kt)("h3",{id:"decodes-a-nsec-key-to-a-private-key"},"Decodes a nsec key to a private key"),(0,r.kt)("p",null,"Now let's say we want to turn back our nsec to our private key, we can use the ",(0,r.kt)("inlineCode",{parentName:"p"},"decodeNsecKeyToPrivateKey()")," method of the ",(0,r.kt)("inlineCode",{parentName:"p"},"Nostr.instance.keysService"),", Example:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-dart"},"final decodedPrivateKey = Nostr.instance.keysService.decodeNsecKeyToPrivateKey(nsecKey);\n\nprint(decodedPrivateKey); // ...\n\nprint(decodedPrivateKey == keyPair.private); // true\n")),(0,r.kt)("p",null,"See, in the same way we got our private key back."),(0,r.kt)("h2",{id:"whats-next-"},"What's next ?"),(0,r.kt)("p",null,"Learn how to ",(0,r.kt)("a",{parentName:"p",href:"./signing-and-verifying-data"},"sign & verify data"),"."))}y.isMDXComponent=!0}}]);