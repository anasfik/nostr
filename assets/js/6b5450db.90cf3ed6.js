"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[712],{3905:(e,t,r)=>{r.d(t,{Zo:()=>l,kt:()=>k});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var p=n.createContext({}),y=function(e){var t=n.useContext(p),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},l=function(e){var t=y(e.components);return n.createElement(p.Provider,{value:t},e.children)},c="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,i=e.originalType,p=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),c=y(r),d=a,k=c["".concat(p,".").concat(d)]||c[d]||u[d]||i;return r?n.createElement(k,o(o({ref:t},l),{},{components:r})):n.createElement(k,o({ref:t},l))}));function k(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=r.length,o=new Array(i);o[0]=d;var s={};for(var p in t)hasOwnProperty.call(t,p)&&(s[p]=t[p]);s.originalType=e,s[c]="string"==typeof e?e:a,o[1]=s;for(var y=2;y<i;y++)o[y]=r[y];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},5423:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>p,contentTitle:()=>o,default:()=>u,frontMatter:()=>i,metadata:()=>s,toc:()=>y});var n=r(7462),a=(r(7294),r(3905));const i={sidebar_position:3},o="Generate and get a new private key directly",s={unversionedId:"usage/key-pairs/generate-private-key-directly",id:"usage/key-pairs/generate-private-key-directly",title:"Generate and get a new private key directly",description:"Well, since you know that you can get a whole keypair to use with only it's private key, you may want to only generate it, then creating a keypair from it later, this will be useful if you want to store the private key somewhere and use it later to generate a keypair and so avoiding the instantly derivation of the keypair from the private key.",source:"@site/docs/usage/key-pairs/generate-private-key-directly.md",sourceDirName:"usage/key-pairs",slug:"/usage/key-pairs/generate-private-key-directly",permalink:"/nostr/usage/key-pairs/generate-private-key-directly",draft:!1,editUrl:"https://github.com/anasfik/nostr/tree/main/docs/docs/usage/key-pairs/generate-private-key-directly.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"Get a key pair from an existent private key.",permalink:"/nostr/usage/key-pairs/get-a-key-pair-from-public-key"},next:{title:"Sign and verify a pice of data",permalink:"/nostr/usage/key-pairs/signing-and-verifying-data"}},p={},y=[],l={toc:y},c="wrapper";function u(e){let{components:t,...r}=e;return(0,a.kt)(c,(0,n.Z)({},l,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"generate-and-get-a-new-private-key-directly"},"Generate and get a new private key directly"),(0,a.kt)("p",null,"Well, since you know that you can get a whole keypair to use with only it's private key, you may want to only generate it, then creating a keypair from it later, this will be useful if you want to store the private key somewhere and use it later to generate a keypair and so avoiding the instantly derivation of the keypair from the private key."),(0,a.kt)("p",null,"For this, you can use the ",(0,a.kt)("inlineCode",{parentName:"p"},"generatePrivateKey()")," method of the ",(0,a.kt)("inlineCode",{parentName:"p"},"Nostr.instance.keysService"),", this method will return a ",(0,a.kt)("inlineCode",{parentName:"p"},"String")," that represents the private key, Example:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-dart"},"// Generate a new private key.\nString privateKey = Nostr.instance.keysService.generatePrivateKey();\n\n// Now you can use it as you want.\nprint(privateKey); // ...\n\n// ... \n\n// later, after one hour as example, you can generate a keypair from it.\nNostrKeyPairs keyPair = Nostr.instance.keysService.generateKeyPairFromExistingPrivateKey(privateKey);\n\n// Now you can use it as you want.\nprint(keyPair.private); // ...\nprint(keyPair.public); // ...\n")))}u.isMDXComponent=!0}}]);